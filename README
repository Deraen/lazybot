# sexpbot

My answer to clojurebot. (<3 hiredman)

An IRC bot written in Clojure. It uses Irclj (http://github.com/Raynes/irclj), my IRC library IRC connection handling, and uses multimethods for dispatch for commands under the hood (it's covered up by a cute little plugin DSL). It offers a slew of features, including sandboxed Clojure code evaluation, powered by clj-sandbox, all the way down to classic operator bot commands. Check out src/sexpbot/plugins to see all the available plugins.

This is not a totally one-man effort. I have all sorts of people from the Clojure community who give me suggestions and general tips. Recently, Erik (boredomist) started working on sexpbot with me. Stuff gets done a lot faster with both of us working on the bot, so <3 Erik. :)

## Usage

Several of this bot's plugins require that you have MongoDB installed and running. The plugins that currently do are mail, whatis, macro, seen, help, fortune and karma. You can find some quickstart guides for setting up MongoDB here: http://www.mongodb.org/display/DOCS/Quickstart. It's usually pretty painless and fast.

As for what OSes this bot actually runs on: I have no clue. I've seen it run on several Ubuntu distros, but nobody (that I know of) has yet to venture into the world of sexpbot-on-windows or mac. If you do, please let me know how it goes.

Right now, there are no distributions, so the easiest way to run the bot is to clone the repository, do 'lein deps' to install the project's dependencies into the lib/ directory, and then edit .sexpbot/info.clj to put the servers and other information the bot needs to have in there, get MongoDB running, and then run ./sexpbot.

IMPORTANT: If you load the eval plugin, you must rename and move "example.policy" to "~/.java.policy" to avoid some troublesome security errors!

I'll be adding a list of commands soon, and I'll also be making it easier to set up the bot and such.

## Thanks

Thanks to Licenser from #clojure for writing such a wonderful sandbox library, which made my bot's Clojure code evaluation possible. Me and him have spent hours on end finding bugs and improving clj-sandbox's code. As my bot evolved, so has clj-sandbox.

Thanks to psyckotic from #clojure and #clojure-casual for giving tons of ideas and feedback on the bot.

Thanks for programble from #(code) for contributing a plugin, and possibly more in the future.

Thanks to everybody in #(code) for feedback, ideas, and all around support.

And last but not least, I'd like to thank the academy f... Oh, wait...

## License

Licensed under the same thing Clojure is licensed under. The EPL, of which you can find a copy of here: http://www.eclipse.org/legal/epl-v10.html and at the root of this directory.